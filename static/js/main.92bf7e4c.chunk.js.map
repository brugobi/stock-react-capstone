{"version":3,"sources":["redux/stock/stockTypes.js","redux/stock/stockActions.js","redux/stock/filter/filterActions.js","components/FilterContainer.js","components/StockContainer.js","components/CompanyContainer.js","redux/stock/filter/filterReducer.js","redux/stock/stockReducer.js","redux/store.js","App.js","index.js"],"names":["FETCH_STOCK_REQUEST","FETCH_STOCK_SUCCESS","FETCH_STOCK_FAILURE","CHANGE_FILTER","FETCH_COMPANY_SUCCESS","fetchStockRequest","type","fetchStockFailure","error","payload","API_KEY","process","fetchStock","dispatch","axios","get","then","response","stocks","data","fetchStockSuccess","catch","errorMsg","message","fetchCompany","ticker","company","fetchCompanySuccess","changeFilter","filter","connect","categories","className","role","aria-label","Provider","value","size","color","name","id","onChange","e","cat","target","map","StockContainer","useDispatch","useEffect","stockData","useSelector","state","stock","loading","profitable","filteredStocks","profit","changesPercentage","includes","slice","companyName","price","to","CompanyContainer","useParams","symbol","dayLow","dayHigh","exchange","filterReducer","action","initialState","stockReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92bf7e4c.chunk.js","sourcesContent":["export const FETCH_STOCK_REQUEST = 'FETCH_STOCK_REQUEST';\nexport const FETCH_STOCK_SUCCESS = 'FETCH_STOCK_SUCCESS';\nexport const FETCH_STOCK_FAILURE = 'FETCH_STOCK_FAILURE';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\n","import axios from 'axios';\nimport {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n  FETCH_COMPANY_SUCCESS,\n} from './stockTypes';\n\nconst fetchStockRequest = () => ({\n  type: FETCH_STOCK_REQUEST,\n});\n\nconst fetchStockSuccess = (stocks) => ({\n  type: FETCH_STOCK_SUCCESS,\n  payload: stocks,\n});\n\nconst fetchCompanySuccess = (company) => ({\n  type: FETCH_COMPANY_SUCCESS,\n  payload: company,\n});\n\nconst fetchStockFailure = (error) => ({\n  type: FETCH_STOCK_FAILURE,\n  payload: error,\n});\n\nconst API_KEY = process.env.REACT_APP_STOCK_API_KEY;\n\nexport const fetchStock = () => (dispatch) => {\n  dispatch(fetchStockRequest);\n  axios.get(`https://financialmodelingprep.com/api/v3/actives?apikey=${API_KEY}`)\n    .then((response) => {\n      const stocks = response.data;\n      dispatch(fetchStockSuccess(stocks));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(fetchStockFailure(errorMsg));\n    });\n};\n\nexport const fetchCompany = (ticker) => (dispatch) => {\n  dispatch(fetchStockRequest);\n  axios.get(`https://financialmodelingprep.com/api/v3/quote/${ticker}?apikey=${API_KEY}`)\n    .then((response) => {\n      const company = response.data[0];\n      dispatch(fetchCompanySuccess(company));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(fetchStockFailure(errorMsg));\n    });\n};\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst changeFilter = (filter) => ({\n  type: CHANGE_FILTER,\n  payload: filter,\n});\n\nexport default changeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { IconContext } from 'react-icons';\nimport { AiOutlineGlobal } from 'react-icons/ai';\nimport changeFilter from '../redux/stock/filter/filterActions';\n\nconst FilterContainer = ({ changeFilter }) => {\n  const categories = ['All', 'Profitable', 'Unprofitable'];\n\n  const filterByCat = (e) => {\n    const cat = e.target.value;\n    changeFilter(cat);\n  };\n\n  return (\n\n    <nav className=\"navbar is-dark is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <div className=\"brand\">\n            <div>\n              <IconContext.Provider value={{ size: '40px', color: '#4c79f2' }}>\n                <AiOutlineGlobal />\n              </IconContext.Provider>\n            </div>\n            <div className=\"is-white brand-name\">\n              Global Market\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div>\n            <div className=\"is-white\">Filter by: </div>\n          </div>\n          <select name=\"filter\" id=\"filter\" onChange={filterByCat}>\n            {categories.map((cat) => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (categories) => dispatch(changeFilter(categories)),\n});\n\nFilterContainer.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FilterContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStock } from '../redux/stock/stockActions';\nimport FilterContainer from './FilterContainer';\n\nconst StockContainer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchStock());\n  }, []);\n\n  const stockData = useSelector((state) => state.stock);\n  const filter = useSelector((state) => state.filter);\n  const loading = useSelector((state) => state.stock.loading);\n  const errorMsg = useSelector((state) => state.stock.error);\n\n  const profitable = filter === 'Profitable' ? '+' : '-';\n  const filteredStocks = filter === 'All' ? stockData.stocks\n    : stockData.stocks.filter((profit) => profit.changesPercentage.includes(profitable));\n\n  switch (true) {\n    case loading:\n      return (\n        <h2>Loading</h2>\n      );\n    case errorMsg:\n      return (\n        <h2>{stockData.error}</h2>\n      );\n    default:\n      if (filteredStocks !== null) {\n        return (\n          <div>\n            <FilterContainer />\n            <div className=\"container\">\n              {filteredStocks.slice(0, 100).map((stock) => (\n                <div className=\"card-wrapper\" key={stock.ticker}>\n                  <div className=\"card stock-custom card-effect\">\n                    <div className=\"content\">\n                      <p className=\"OpenSans-font color-orange\">\n                        (\n                        {stock.ticker}\n                        )\n                      </p>\n                      <p className=\"OpenSans-font\">{stock.companyName}</p>\n                      <p className=\"price color-blue\">\n                        $\n                        {stock.price}\n                      </p>\n                      <p className={stock.changesPercentage.includes('-') ? 'is-danger' : 'is-success'}>{stock.changesPercentage}</p>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"button\" className=\"is-white btn-more-close card-footer-item\">\n                        <Link to={`/CompanyContainer/${stock.ticker}`} className=\"btn-link\">See More</Link>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      }\n      return (\n        <h2>OMG! no company here...how is this possible?</h2>\n      );\n  }\n};\n\nexport default StockContainer;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchCompany } from '../redux/stock/stockActions';\n\nconst CompanyContainer = () => {\n  const { ticker } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCompany(ticker));\n  }, []);\n\n  const stockData = useSelector((state) => state.stock.company);\n  const loading = useSelector((state) => state.stock.loading);\n  const errorMsg = useSelector((state) => state.stock.error);\n\n  switch (true) {\n    case loading:\n      return (\n        <h2 className=\"is-white\">Loading</h2>\n      );\n    case errorMsg:\n      return (\n        <h2>{errorMsg}</h2>\n      );\n    default:\n      return (\n        <div>\n          <div className=\"container\">\n            <div className=\"card-wrapper\">\n              <div className=\"card stock-custom\">\n                <div className=\"content\">\n                  <div>\n                    <h1 className=\"OpenSans-font color-orange\">\n                      {stockData.name}\n                      {' '}\n                      -\n                      {' '}\n                      {stockData.symbol}\n                    </h1>\n                    <div className=\"price color-blue\">\n                      <p>\n                        <span className=\"color-gray\">Price - </span>\n                        $\n                        {stockData.price}\n                      </p>\n                      <p>\n                        <span className=\"color-gray\">dayLow - </span>\n                        $\n                        {stockData.dayLow}\n                      </p>\n                      <p>\n                        <span className=\"color-gray\">dayHigh - </span>\n                        $\n                        {stockData.dayHigh}\n                      </p>\n                      <p className={stockData.changesPercentage >= 0 ? 'is-success' : 'is-danger'}>\n                        <span>\n                          Profite -&gt;&nbsp;\n                          {stockData.changesPercentage}\n                          %\n                        </span>\n                      </p>\n                    </div>\n                    <div className=\"exchange-div\">\n                      <p>\n                        <span className=\"color-blue price\">Exchange -&gt;&nbsp;</span>\n                        <span className=\"color-orange\">{stockData.exchange}</span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card-footer\">\n                  <button type=\"button\" className=\"btn-more-close card-footer-item\">\n                    <Link to=\"/stock-react-capstone/\" className=\"btn-link\">Close</Link>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n  }\n};\n\nexport default CompanyContainer;\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst filterReducer = (state = 'All', action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n  FETCH_COMPANY_SUCCESS,\n} from './stockTypes';\n\nconst initialState = {\n  loading: false,\n  stocks: [],\n  company: [],\n  error: '',\n};\n\nconst stockReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_STOCK_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_STOCK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        stocks: action.payload,\n        error: '',\n      };\n\n    case FETCH_COMPANY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        company: action.payload,\n        error: '',\n      };\n\n    case FETCH_STOCK_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        stocks: [],\n        error: action.payload,\n      };\n    default: return state;\n  }\n};\n\nexport default stockReducer;\n","import {\n  combineReducers, createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport filterReducer from './stock/filter/filterReducer';\nimport stockReducer from './stock/stockReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({ stock: stockReducer, filter: filterReducer });\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport StockContainer from './components/StockContainer';\nimport CompanyContainer from './components/CompanyContainer';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <>\n            <Switch>\n              <Route exact path=\"/stock-react-capstone/\" component={StockContainer} />\n              <Route exact path=\"/CompanyContainer/:ticker\" component={CompanyContainer} />\n            </Switch>\n          </>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}