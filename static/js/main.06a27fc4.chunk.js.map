{"version":3,"sources":["redux/stock/stockTypes.js","redux/stock/filter/filterActions.js","components/FilterContainer.js","redux/stock/stockActions.js","components/StockContainer.js","redux/stock/filter/filterReducer.js","redux/stock/stockReducer.js","redux/store.js","App.js","index.js"],"names":["FETCH_STOCK_REQUEST","FETCH_STOCK_SUCCESS","FETCH_STOCK_FAILURE","CHANGE_FILTER","changeFilter","filter","type","payload","connect","dispatch","categories","className","role","aria-label","name","id","onChange","e","cat","target","value","map","fetchStockRequest","fetchStock","axios","get","process","then","response","stocks","data","fetchStockSuccess","catch","error","errorMsg","message","fetchStockFailure","state","stockData","stock","useEffect","profitable","filteredStocks","profit","changesPercentage","includes","console","log","loading","slice","ticker","companyName","price","filterReducer","action","initialState","stockReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06a27fc4.chunk.js","sourcesContent":["export const FETCH_STOCK_REQUEST = 'FETCH_STOCK_REQUEST';\nexport const FETCH_STOCK_SUCCESS = 'FETCH_STOCK_SUCCESS';\nexport const FETCH_STOCK_FAILURE = 'FETCH_STOCK_FAILURE';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst changeFilter = (filter) => ({\n  type: CHANGE_FILTER,\n  payload: filter,\n});\n\nexport default changeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeFilter from '../redux/stock/filter/filterActions';\n\nconst FilterContainer = ({ changeFilter }) => {\n  const categories = ['All', 'Profitable', 'Unprofitable'];\n\n  const filterByCat = (e) => {\n    const cat = e.target.value;\n    changeFilter(cat);\n  };\n\n  return (\n\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <div className=\"brand\">Global Market</div>\n        </div>\n      </div>\n\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-item\">\n          <div>\n            <div>Filter by: </div>\n          </div>\n          <select name=\"filter\" id=\"filter\" onChange={filterByCat}>\n            {categories.map((cat) => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* <div className=\"navbar-end\">\n        <IconContext.Provider value={{ size: '30px', color: '#379cf6' }}>\n          <FaUserCircle />\n        </IconContext.Provider>\n      </div> */}\n    </nav>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (categories) => dispatch(changeFilter(categories)),\n});\n\nFilterContainer.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FilterContainer);\n","import axios from 'axios';\nimport {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n} from './stockTypes';\n\nconst fetchStockRequest = () => ({\n  type: FETCH_STOCK_REQUEST,\n});\n\nconst fetchStockSuccess = (stocks) => ({\n  type: FETCH_STOCK_SUCCESS,\n  payload: stocks,\n});\n\nconst fetchStockFailure = (error) => ({\n  type: FETCH_STOCK_FAILURE,\n  payload: error,\n});\n\nconst fetchStock = () => (dispatch) => {\n  const API_KEY = process.env.REACT_APP_STOCK_API_KEY;\n  dispatch(fetchStockRequest);\n  axios.get(`https://financialmodelingprep.com/api/v3/actives?apikey=${API_KEY}`)\n    .then((response) => {\n      const stocks = response.data;\n      dispatch(fetchStockSuccess(stocks));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(fetchStockFailure(errorMsg));\n    });\n};\n\nexport default fetchStock;\n","/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchStock from '../redux/stock/stockActions';\n\nconst StockContainer = ({ stockData, fetchStock, filter }) => {\n  useEffect(() => {\n    fetchStock();\n  }, []);\n\n  \n\n  const profitable = filter === 'Profitable' ? '+' : '-';\n  let filteredStocks =\n    filter === 'All' ? stockData.stocks :\n      stockData.stocks.filter(profit => profit.changesPercentage.includes(profitable));\n\n  console.log(filteredStocks, filter)\n  if (stockData.error) {\n    <h2>{stockData.error}</h2>\n  } if (stockData.loading) {\n    <h2>Loading</h2>\n\n  } return (\n    <div>\n      <div className=\"container\">\n        {filteredStocks.slice(0, 20).map((stock) => (\n          <div className=\"card-wrapper\">\n            <div className=\"card stock-card\" key={stock.ticker}>\n              <div className=\"content\">\n                <p>({stock.ticker})</p>\n                <p>{stock.companyName}</p>\n                <p className=\"price\">{stock.price}</p>\n                <p>{stock.changesPercentage}</p>\n              </div>\n              <div className=\"card-footer\">\n                <button className=\"button is-danger is-light btn-more card-footer-item\">See More</button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  stockData: state.stock,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStock: () => dispatch(fetchStock()),\n});\n\nStockContainer.propTypes = {\n  userData: PropTypes.object.isRequired,\n  mapStateToProps: PropTypes.func.isRequired,\n  mapDispatchToProps: PropTypes.func.isRequired,\n  fetchStock: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StockContainer);\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst filterReducer = (state = 'All', action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n} from './stockTypes';\n\nconst initialState = {\n  loading: false,\n  stocks: [],\n  error: '',\n};\n\nconst stockReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_STOCK_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_STOCK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        stocks: action.payload,\n        error: '',\n      };\n\n    case FETCH_STOCK_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        stocks: [],\n        error: action.payload,\n      };\n    default: return state;\n  }\n};\n\nexport default stockReducer;\n","import {\n  combineReducers, createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport filterReducer from './stock/filter/filterReducer';\nimport stockReducer from './stock/stockReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({ stock: stockReducer, filter: filterReducer });\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport './App.css';\nimport FilterContainer from './components/FilterContainer';\nimport StockContainer from './components/StockContainer';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <FilterContainer />\n        <StockContainer />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}