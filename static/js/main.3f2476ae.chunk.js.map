{"version":3,"sources":["redux/stock/stockActions.js","redux/stock/stockTypes.js","redux/stock/filter/filterActions.js","components/FilterContainer.js","components/StockContainer.js","components/CompanyContainer.js","redux/stock/filter/filterReducer.js","redux/stock/stockReducer.js","redux/store.js","App.js","index.js"],"names":["fetchStockRequest","type","fetchStockFailure","error","payload","API_KEY","process","changeFilter","filter","connect","dispatch","categories","_ref","react_default","a","createElement","className","role","aria-label","name","id","onChange","e","cat","target","value","map","key","state","stockData","stock","fetchStock","axios","get","concat","then","response","stocks","data","fetchStockSuccess","catch","errorMsg","message","useEffect","profitable","filteredStocks","profit","changesPercentage","includes","loading","components_FilterContainer","slice","ticker","companyName","price","react_router_dom","to","company","fetchCompany","fetchCompanySuccess","useParams","symbol","filterReducer","arguments","length","undefined","action","initialState","stockReducer","Object","objectSpread","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","es","Fragment","react_router","exact","path","component","StockContainer","CompanyContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3f2476ae.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n  FETCH_COMPANY_SUCCESS,\n} from './stockTypes';\n\nconst fetchStockRequest = () => ({\n  type: FETCH_STOCK_REQUEST,\n});\n\nconst fetchStockSuccess = (stocks) => ({\n  type: FETCH_STOCK_SUCCESS,\n  payload: stocks,\n});\n\nconst fetchCompanySuccess = (company) => ({\n  type: FETCH_COMPANY_SUCCESS,\n  payload: company,\n});\n\nconst fetchStockFailure = (error) => ({\n  type: FETCH_STOCK_FAILURE,\n  payload: error,\n});\n\nconst API_KEY = process.env.REACT_APP_STOCK_API_KEY;\n\nexport const fetchStock = () => (dispatch) => {\n  dispatch(fetchStockRequest);\n  axios.get(`https://financialmodelingprep.com/api/v3/actives?apikey=${API_KEY}`)\n    .then((response) => {\n      const stocks = response.data;\n      dispatch(fetchStockSuccess(stocks));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(fetchStockFailure(errorMsg));\n    });\n};\n\nexport const fetchCompany = (ticker) => (dispatch) => {\n  dispatch(fetchStockRequest);\n  axios.get(`https://financialmodelingprep.com/api/v3/quote/${ticker}?apikey=${API_KEY}`)\n    .then((response) => {\n      const company = response.data[0];\n      dispatch(fetchCompanySuccess(company));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(fetchStockFailure(errorMsg));\n    });\n};\n","export const FETCH_STOCK_REQUEST = 'FETCH_STOCK_REQUEST';\nexport const FETCH_STOCK_SUCCESS = 'FETCH_STOCK_SUCCESS';\nexport const FETCH_STOCK_FAILURE = 'FETCH_STOCK_FAILURE';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst changeFilter = (filter) => ({\n  type: CHANGE_FILTER,\n  payload: filter,\n});\n\nexport default changeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeFilter from '../redux/stock/filter/filterActions';\n\nconst FilterContainer = ({ changeFilter }) => {\n  const categories = ['All', 'Profitable', 'Unprofitable'];\n\n  const filterByCat = (e) => {\n    const cat = e.target.value;\n    changeFilter(cat);\n  };\n\n  return (\n\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <div className=\"brand\">Global Market</div>\n        </div>\n      </div>\n\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-item\">\n          <div>\n            <div>Filter by: </div>\n          </div>\n          <select name=\"filter\" id=\"filter\" onChange={filterByCat}>\n            {categories.map((cat) => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* <div className=\"navbar-end\">\n        <IconContext.Provider value={{ size: '30px', color: '#379cf6' }}>\n          <FaUserCircle />\n        </IconContext.Provider>\n      </div> */}\n    </nav>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (categories) => dispatch(changeFilter(categories)),\n});\n\nFilterContainer.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FilterContainer);\n","/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchStock } from '../redux/stock/stockActions';\nimport { Link } from 'react-router-dom';\nimport FilterContainer from './FilterContainer';\n\nconst StockContainer = ({ stockData, fetchStock, filter }) => {\n  useEffect(() => {\n    fetchStock();\n  }, []);\n\n  const profitable = filter === 'Profitable' ? '+' : '-';\n  let filteredStocks =\n    filter === 'All' ? stockData.stocks :\n      stockData.stocks.filter(profit => profit.changesPercentage.includes(profitable));\n\n  // console.log(filteredStocks, filter)\n  if (stockData.error) {\n    <h2>{stockData.error}</h2>\n  } if (stockData.loading) {\n    <h2>Loading</h2>\n\n  } return (\n    <div>\n      <FilterContainer />\n      <div className=\"container\">\n        {filteredStocks.slice(0, 20).map((stock) => (\n          <div className=\"card-wrapper\">\n            <div className=\"card stock-card\" key={stock.ticker}>\n              <div className=\"content\">\n                <p>({stock.ticker})</p>\n                <p>{stock.companyName}</p>\n                <p className=\"price\">{stock.price}</p>\n                <p>{stock.changesPercentage}</p>\n              </div>\n              <div className=\"card-footer\">\n                <button className=\"button is-danger is-light btn-more card-footer-item\">\n                  <Link to={`/CompanyContainer/${stock.ticker}`}>See More</Link>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  stockData: state.stock,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStock: () => dispatch(fetchStock()),\n});\n\nStockContainer.propTypes = {\n  userData: PropTypes.object.isRequired,\n  mapStateToProps: PropTypes.func.isRequired,\n  mapDispatchToProps: PropTypes.func.isRequired,\n  fetchStock: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StockContainer);\n","/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCompany } from '../redux/stock/stockActions';\nimport { Link, useParams } from 'react-router-dom';\n\n\nconst CompanyContainer = ({ stockData, loading, errorMsg, fetchCompany }) => {\n  const { ticker } = useParams();\n  useEffect(() => {\n    fetchCompany(ticker);\n  }, []);\n\n  return loading ? (\n    <h2>Loading</h2>\n  ) : errorMsg ? (\n    <h2>{errorMsg}</h2>\n  ) : (\n    <div>\n      <div className=\"container\">\n        <div className=\"card-wrapper\">\n          <div className=\"card stock-card\">\n            <div className=\"content\">\n              <div>\n                <h1>{stockData.name}</h1>\n                <h4>{stockData.symbol}</h4>\n                <p>{stockData.price}</p>\n              </div>\n            </div>\n            <div className=\"card-footer\">\n              <button className=\"button is-danger is-light btn-more card-footer-item\">\n                <Link to=\"/\">Close</Link>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  stockData: state.stock.company,\n  loading: state.stock.loading,\n  errorMsg: state.stock.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCompany: (ticker) => dispatch(fetchCompany(ticker)),\n});\n\nCompanyContainer.propTypes = {\n  mapStateToProps: PropTypes.func.isRequired,\n  mapDispatchToProps: PropTypes.func.isRequired,\n  fetchCompany: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CompanyContainer);\n","import { CHANGE_FILTER } from '../stockTypes';\n\nconst filterReducer = (state = 'All', action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {\n  FETCH_STOCK_REQUEST,\n  FETCH_STOCK_SUCCESS,\n  FETCH_STOCK_FAILURE,\n  FETCH_COMPANY_SUCCESS,\n} from './stockTypes';\n\nconst initialState = {\n  loading: false,\n  stocks: [],\n  company: [],\n  error: '',\n};\n\nconst stockReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_STOCK_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_STOCK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        stocks: action.payload,\n        error: '',\n      };\n\n    case FETCH_COMPANY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        company: action.payload,\n        error: '',\n      };\n\n    case FETCH_STOCK_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        stocks: [],\n        error: action.payload,\n      };\n    default: return state;\n  }\n};\n\nexport default stockReducer;\n","import {\n  combineReducers, createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport filterReducer from './stock/filter/filterReducer';\nimport stockReducer from './stock/stockReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({ stock: stockReducer, filter: filterReducer });\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport StockContainer from './components/StockContainer';\nimport CompanyContainer from './components/CompanyContainer';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <>\n          <Switch>\n            <Route exact path=\"/\" component={StockContainer} />\n            <Route exact path=\"/CompanyContainer/:ticker\" component={CompanyContainer} />\n          </Switch>\n        </>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}